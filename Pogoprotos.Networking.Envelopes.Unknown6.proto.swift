// Generated by the Protocol Buffers 3.0 compiler.  DO NOT EDIT!
// Source file "Unknown6.proto"
// Syntax "Proto3"

import Foundation
import ProtocolBuffers


public struct Pogoprotos { public struct Networking { public struct Envelopes { }}}

public func == (lhs: Pogoprotos.Networking.Envelopes.Unknown6, rhs: Pogoprotos.Networking.Envelopes.Unknown6) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = fieldCheck && (lhs.hasUnknown1 == rhs.hasUnknown1) && (!lhs.hasUnknown1 || lhs.unknown1 == rhs.unknown1)
  fieldCheck = fieldCheck && (lhs.hasUnknown2 == rhs.hasUnknown2) && (!lhs.hasUnknown2 || lhs.unknown2 == rhs.unknown2)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public func == (lhs: Pogoprotos.Networking.Envelopes.Unknown6.Unknown2, rhs: Pogoprotos.Networking.Envelopes.Unknown6.Unknown2) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = fieldCheck && (lhs.hasUnknown1 == rhs.hasUnknown1) && (!lhs.hasUnknown1 || lhs.unknown1 == rhs.unknown1)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public extension Pogoprotos.Networking.Envelopes {
  public struct Unknown6Root {
    public static var sharedInstance : Unknown6Root {
     struct Static {
         static let instance : Unknown6Root = Unknown6Root()
     }
     return Static.instance
    }
    public var extensionRegistry:ExtensionRegistry

    init() {
      extensionRegistry = ExtensionRegistry()
      registerAllExtensions(extensionRegistry)
    }
    public func registerAllExtensions(registry:ExtensionRegistry) {
    }
  }

  final public class Unknown6 : GeneratedMessage, GeneratedMessageProtocol {


    //Nested type declaration start

      final public class Unknown2 : GeneratedMessage, GeneratedMessageProtocol {
        public private(set) var hasUnknown1:Bool = false
        public private(set) var unknown1:NSData = NSData()

        required public init() {
             super.init()
        }
        override public func isInitialized() -> Bool {
         return true
        }
        override public func writeToCodedOutputStream(output:CodedOutputStream) throws {
          if hasUnknown1 {
            try output.writeData(1, value:unknown1)
          }
          try unknownFields.writeToCodedOutputStream(output)
        }
        override public func serializedSize() -> Int32 {
          var serialize_size:Int32 = memoizedSerializedSize
          if serialize_size != -1 {
           return serialize_size
          }

          serialize_size = 0
          if hasUnknown1 {
            serialize_size += unknown1.computeDataSize(1)
          }
          serialize_size += unknownFields.serializedSize()
          memoizedSerializedSize = serialize_size
          return serialize_size
        }
        public class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<Pogoprotos.Networking.Envelopes.Unknown6.Unknown2> {
          var mergedArray = Array<Pogoprotos.Networking.Envelopes.Unknown6.Unknown2>()
          while let value = try parseFromDelimitedFromInputStream(input) {
            mergedArray += [value]
          }
          return mergedArray
        }
        public class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> Pogoprotos.Networking.Envelopes.Unknown6.Unknown2? {
          return try Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.Builder().mergeDelimitedFromInputStream(input)?.build()
        }
        public class func parseFromData(data:NSData) throws -> Pogoprotos.Networking.Envelopes.Unknown6.Unknown2 {
          return try Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.Builder().mergeFromData(data, extensionRegistry:Pogoprotos.Networking.Envelopes.Unknown6Root.sharedInstance.extensionRegistry).build()
        }
        public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> Pogoprotos.Networking.Envelopes.Unknown6.Unknown2 {
          return try Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
        }
        public class func parseFromInputStream(input:NSInputStream) throws -> Pogoprotos.Networking.Envelopes.Unknown6.Unknown2 {
          return try Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.Builder().mergeFromInputStream(input).build()
        }
        public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> Pogoprotos.Networking.Envelopes.Unknown6.Unknown2 {
          return try Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
        }
        public class func parseFromCodedInputStream(input:CodedInputStream) throws -> Pogoprotos.Networking.Envelopes.Unknown6.Unknown2 {
          return try Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.Builder().mergeFromCodedInputStream(input).build()
        }
        public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Pogoprotos.Networking.Envelopes.Unknown6.Unknown2 {
          return try Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
        }
        public class func getBuilder() -> Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.Builder {
          return Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.classBuilder() as! Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.Builder
        }
        public func getBuilder() -> Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.Builder {
          return classBuilder() as! Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.Builder
        }
        override public class func classBuilder() -> MessageBuilder {
          return Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.Builder()
        }
        override public func classBuilder() -> MessageBuilder {
          return Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.Builder()
        }
        public func toBuilder() throws -> Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.Builder {
          return try Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.builderWithPrototype(self)
        }
        public class func builderWithPrototype(prototype:Pogoprotos.Networking.Envelopes.Unknown6.Unknown2) throws -> Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.Builder {
          return try Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.Builder().mergeFrom(prototype)
        }
        override public func encode() throws -> Dictionary<String,AnyObject> {
          guard isInitialized() else {
            throw ProtocolBuffersError.InvalidProtocolBuffer("Uninitialized Message")
          }

          var jsonMap:Dictionary<String,AnyObject> = Dictionary<String,AnyObject>()
          if hasUnknown1 {
            jsonMap["unknown1"] = unknown1.base64EncodedStringWithOptions(NSDataBase64EncodingOptions(rawValue: 0))
          }
          return jsonMap
        }
        override class public func decode(jsonMap:Dictionary<String,AnyObject>) throws -> Pogoprotos.Networking.Envelopes.Unknown6.Unknown2 {
          return try Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.Builder.decodeToBuilder(jsonMap).build()
        }
        override class public func fromJSON(data:NSData) throws -> Pogoprotos.Networking.Envelopes.Unknown6.Unknown2 {
          return try Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.Builder.fromJSONToBuilder(data).build()
        }
        override public func getDescription(indent:String) throws -> String {
          var output = ""
          if hasUnknown1 {
            output += "\(indent) unknown1: \(unknown1) \n"
          }
          output += unknownFields.getDescription(indent)
          return output
        }
        override public var hashValue:Int {
            get {
                var hashCode:Int = 7
                if hasUnknown1 {
                   hashCode = (hashCode &* 31) &+ unknown1.hashValue
                }
                hashCode = (hashCode &* 31) &+  unknownFields.hashValue
                return hashCode
            }
        }


        //Meta information declaration start

        override public class func className() -> String {
            return "Pogoprotos.Networking.Envelopes.Unknown6.Unknown2"
        }
        override public func className() -> String {
            return "Pogoprotos.Networking.Envelopes.Unknown6.Unknown2"
        }
        override public func classMetaType() -> GeneratedMessage.Type {
            return Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.self
        }
        //Meta information declaration end

        final public class Builder : GeneratedMessageBuilder {
          private var builderResult:Pogoprotos.Networking.Envelopes.Unknown6.Unknown2 = Pogoprotos.Networking.Envelopes.Unknown6.Unknown2()
          public func getMessage() -> Pogoprotos.Networking.Envelopes.Unknown6.Unknown2 {
              return builderResult
          }

          required override public init () {
             super.init()
          }
          public var hasUnknown1:Bool {
               get {
                    return builderResult.hasUnknown1
               }
          }
          public var unknown1:NSData {
               get {
                    return builderResult.unknown1
               }
               set (value) {
                   builderResult.hasUnknown1 = true
                   builderResult.unknown1 = value
               }
          }
          public func setUnknown1(value:NSData) -> Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.Builder {
            self.unknown1 = value
            return self
          }
          public func clearUnknown1() -> Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.Builder{
               builderResult.hasUnknown1 = false
               builderResult.unknown1 = NSData()
               return self
          }
          override public var internalGetResult:GeneratedMessage {
               get {
                  return builderResult
               }
          }
          override public func clear() -> Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.Builder {
            builderResult = Pogoprotos.Networking.Envelopes.Unknown6.Unknown2()
            return self
          }
          override public func clone() throws -> Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.Builder {
            return try Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.builderWithPrototype(builderResult)
          }
          override public func build() throws -> Pogoprotos.Networking.Envelopes.Unknown6.Unknown2 {
               try checkInitialized()
               return buildPartial()
          }
          public func buildPartial() -> Pogoprotos.Networking.Envelopes.Unknown6.Unknown2 {
            let returnMe:Pogoprotos.Networking.Envelopes.Unknown6.Unknown2 = builderResult
            return returnMe
          }
          public func mergeFrom(other:Pogoprotos.Networking.Envelopes.Unknown6.Unknown2) throws -> Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.Builder {
            if other == Pogoprotos.Networking.Envelopes.Unknown6.Unknown2() {
             return self
            }
            if other.hasUnknown1 {
                 unknown1 = other.unknown1
            }
            try mergeUnknownFields(other.unknownFields)
            return self
          }
          override public func mergeFromCodedInputStream(input:CodedInputStream) throws -> Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.Builder {
               return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
          }
          override public func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.Builder {
            let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
            while (true) {
              let protobufTag = try input.readTag()
              switch protobufTag {
              case 0: 
                self.unknownFields = try unknownFieldsBuilder.build()
                return self

              case 10:
                unknown1 = try input.readData()

              default:
                if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:protobufTag))) {
                   unknownFields = try unknownFieldsBuilder.build()
                   return self
                }
              }
            }
          }
          override class public func decodeToBuilder(jsonMap:Dictionary<String,AnyObject>) throws -> Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.Builder {
            let resultDecodedBuilder = Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.Builder()
            if let jsonValueUnknown1 = jsonMap["unknown1"] as? String {
              resultDecodedBuilder.unknown1 = NSData(base64EncodedString:jsonValueUnknown1, options: NSDataBase64DecodingOptions(rawValue:0))!
            }
            return resultDecodedBuilder
          }
          override class public func fromJSONToBuilder(data:NSData) throws -> Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.Builder {
            let jsonData = try NSJSONSerialization.JSONObjectWithData(data, options: NSJSONReadingOptions(rawValue: 0))
            guard let jsDataCast = jsonData as? Dictionary<String,AnyObject> else {
              throw ProtocolBuffersError.InvalidProtocolBuffer("Invalid JSON data")
            }
            return try Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.Builder.decodeToBuilder(jsDataCast)
          }
        }

      }

    //Nested type declaration end

    //6
    public private(set) var hasUnknown1:Bool = false
    public private(set) var unknown1:Int32 = Int32(0)

    public private(set) var hasUnknown2:Bool = false
    public private(set) var unknown2:Pogoprotos.Networking.Envelopes.Unknown6.Unknown2!
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) throws {
      if hasUnknown1 {
        try output.writeInt32(1, value:unknown1)
      }
      if hasUnknown2 {
        try output.writeMessage(2, value:unknown2)
      }
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      if hasUnknown1 {
        serialize_size += unknown1.computeInt32Size(1)
      }
      if hasUnknown2 {
          if let varSizeunknown2 = unknown2?.computeMessageSize(2) {
              serialize_size += varSizeunknown2
          }
      }
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<Pogoprotos.Networking.Envelopes.Unknown6> {
      var mergedArray = Array<Pogoprotos.Networking.Envelopes.Unknown6>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    public class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> Pogoprotos.Networking.Envelopes.Unknown6? {
      return try Pogoprotos.Networking.Envelopes.Unknown6.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    public class func parseFromData(data:NSData) throws -> Pogoprotos.Networking.Envelopes.Unknown6 {
      return try Pogoprotos.Networking.Envelopes.Unknown6.Builder().mergeFromData(data, extensionRegistry:Pogoprotos.Networking.Envelopes.Unknown6Root.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> Pogoprotos.Networking.Envelopes.Unknown6 {
      return try Pogoprotos.Networking.Envelopes.Unknown6.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) throws -> Pogoprotos.Networking.Envelopes.Unknown6 {
      return try Pogoprotos.Networking.Envelopes.Unknown6.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> Pogoprotos.Networking.Envelopes.Unknown6 {
      return try Pogoprotos.Networking.Envelopes.Unknown6.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) throws -> Pogoprotos.Networking.Envelopes.Unknown6 {
      return try Pogoprotos.Networking.Envelopes.Unknown6.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Pogoprotos.Networking.Envelopes.Unknown6 {
      return try Pogoprotos.Networking.Envelopes.Unknown6.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Pogoprotos.Networking.Envelopes.Unknown6.Builder {
      return Pogoprotos.Networking.Envelopes.Unknown6.classBuilder() as! Pogoprotos.Networking.Envelopes.Unknown6.Builder
    }
    public func getBuilder() -> Pogoprotos.Networking.Envelopes.Unknown6.Builder {
      return classBuilder() as! Pogoprotos.Networking.Envelopes.Unknown6.Builder
    }
    override public class func classBuilder() -> MessageBuilder {
      return Pogoprotos.Networking.Envelopes.Unknown6.Builder()
    }
    override public func classBuilder() -> MessageBuilder {
      return Pogoprotos.Networking.Envelopes.Unknown6.Builder()
    }
    public func toBuilder() throws -> Pogoprotos.Networking.Envelopes.Unknown6.Builder {
      return try Pogoprotos.Networking.Envelopes.Unknown6.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Pogoprotos.Networking.Envelopes.Unknown6) throws -> Pogoprotos.Networking.Envelopes.Unknown6.Builder {
      return try Pogoprotos.Networking.Envelopes.Unknown6.Builder().mergeFrom(prototype)
    }
    override public func encode() throws -> Dictionary<String,AnyObject> {
      guard isInitialized() else {
        throw ProtocolBuffersError.InvalidProtocolBuffer("Uninitialized Message")
      }

      var jsonMap:Dictionary<String,AnyObject> = Dictionary<String,AnyObject>()
      if hasUnknown1 {
        jsonMap["unknown1"] = NSNumber(int:unknown1)
      }
      if hasUnknown2 {
        jsonMap["unknown2"] = try unknown2.encode()
      }
      return jsonMap
    }
    override class public func decode(jsonMap:Dictionary<String,AnyObject>) throws -> Pogoprotos.Networking.Envelopes.Unknown6 {
      return try Pogoprotos.Networking.Envelopes.Unknown6.Builder.decodeToBuilder(jsonMap).build()
    }
    override class public func fromJSON(data:NSData) throws -> Pogoprotos.Networking.Envelopes.Unknown6 {
      return try Pogoprotos.Networking.Envelopes.Unknown6.Builder.fromJSONToBuilder(data).build()
    }
    override public func getDescription(indent:String) throws -> String {
      var output = ""
      if hasUnknown1 {
        output += "\(indent) unknown1: \(unknown1) \n"
      }
      if hasUnknown2 {
        output += "\(indent) unknown2 {\n"
        if let outDescUnknown2 = unknown2 {
          output += try outDescUnknown2.getDescription("\(indent)  ")
        }
        output += "\(indent) }\n"
      }
      output += unknownFields.getDescription(indent)
      return output
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            if hasUnknown1 {
               hashCode = (hashCode &* 31) &+ unknown1.hashValue
            }
            if hasUnknown2 {
                if let hashValueunknown2 = unknown2?.hashValue {
                    hashCode = (hashCode &* 31) &+ hashValueunknown2
                }
            }
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Pogoprotos.Networking.Envelopes.Unknown6"
    }
    override public func className() -> String {
        return "Pogoprotos.Networking.Envelopes.Unknown6"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Pogoprotos.Networking.Envelopes.Unknown6.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Pogoprotos.Networking.Envelopes.Unknown6 = Pogoprotos.Networking.Envelopes.Unknown6()
      public func getMessage() -> Pogoprotos.Networking.Envelopes.Unknown6 {
          return builderResult
      }

      required override public init () {
         super.init()
      }
      public var hasUnknown1:Bool {
           get {
                return builderResult.hasUnknown1
           }
      }
      public var unknown1:Int32 {
           get {
                return builderResult.unknown1
           }
           set (value) {
               builderResult.hasUnknown1 = true
               builderResult.unknown1 = value
           }
      }
      public func setUnknown1(value:Int32) -> Pogoprotos.Networking.Envelopes.Unknown6.Builder {
        self.unknown1 = value
        return self
      }
      public func clearUnknown1() -> Pogoprotos.Networking.Envelopes.Unknown6.Builder{
           builderResult.hasUnknown1 = false
           builderResult.unknown1 = Int32(0)
           return self
      }
      public var hasUnknown2:Bool {
           get {
               return builderResult.hasUnknown2
           }
      }
      public var unknown2:Pogoprotos.Networking.Envelopes.Unknown6.Unknown2! {
           get {
               if unknown2Builder_ != nil {
                  builderResult.unknown2 = unknown2Builder_.getMessage()
               }
               return builderResult.unknown2
           }
           set (value) {
               builderResult.hasUnknown2 = true
               builderResult.unknown2 = value
           }
      }
      private var unknown2Builder_:Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.Builder! {
           didSet {
              builderResult.hasUnknown2 = true
           }
      }
      public func getUnknown2Builder() -> Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.Builder {
        if unknown2Builder_ == nil {
           unknown2Builder_ = Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.Builder()
           builderResult.unknown2 = unknown2Builder_.getMessage()
           if unknown2 != nil {
              try! unknown2Builder_.mergeFrom(unknown2)
           }
        }
        return unknown2Builder_
      }
      public func setUnknown2(value:Pogoprotos.Networking.Envelopes.Unknown6.Unknown2!) -> Pogoprotos.Networking.Envelopes.Unknown6.Builder {
        self.unknown2 = value
        return self
      }
      public func mergeUnknown2(value:Pogoprotos.Networking.Envelopes.Unknown6.Unknown2) throws -> Pogoprotos.Networking.Envelopes.Unknown6.Builder {
        if builderResult.hasUnknown2 {
          builderResult.unknown2 = try Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.builderWithPrototype(builderResult.unknown2).mergeFrom(value).buildPartial()
        } else {
          builderResult.unknown2 = value
        }
        builderResult.hasUnknown2 = true
        return self
      }
      public func clearUnknown2() -> Pogoprotos.Networking.Envelopes.Unknown6.Builder {
        unknown2Builder_ = nil
        builderResult.hasUnknown2 = false
        builderResult.unknown2 = nil
        return self
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      override public func clear() -> Pogoprotos.Networking.Envelopes.Unknown6.Builder {
        builderResult = Pogoprotos.Networking.Envelopes.Unknown6()
        return self
      }
      override public func clone() throws -> Pogoprotos.Networking.Envelopes.Unknown6.Builder {
        return try Pogoprotos.Networking.Envelopes.Unknown6.builderWithPrototype(builderResult)
      }
      override public func build() throws -> Pogoprotos.Networking.Envelopes.Unknown6 {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Pogoprotos.Networking.Envelopes.Unknown6 {
        let returnMe:Pogoprotos.Networking.Envelopes.Unknown6 = builderResult
        return returnMe
      }
      public func mergeFrom(other:Pogoprotos.Networking.Envelopes.Unknown6) throws -> Pogoprotos.Networking.Envelopes.Unknown6.Builder {
        if other == Pogoprotos.Networking.Envelopes.Unknown6() {
         return self
        }
        if other.hasUnknown1 {
             unknown1 = other.unknown1
        }
        if (other.hasUnknown2) {
            try mergeUnknown2(other.unknown2)
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      override public func mergeFromCodedInputStream(input:CodedInputStream) throws -> Pogoprotos.Networking.Envelopes.Unknown6.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      override public func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Pogoprotos.Networking.Envelopes.Unknown6.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let protobufTag = try input.readTag()
          switch protobufTag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          case 8:
            unknown1 = try input.readInt32()

          case 18:
            let subBuilder:Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.Builder = Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.Builder()
            if hasUnknown2 {
              try subBuilder.mergeFrom(unknown2)
            }
            try input.readMessage(subBuilder, extensionRegistry:extensionRegistry)
            unknown2 = subBuilder.buildPartial()

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:protobufTag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
      override class public func decodeToBuilder(jsonMap:Dictionary<String,AnyObject>) throws -> Pogoprotos.Networking.Envelopes.Unknown6.Builder {
        let resultDecodedBuilder = Pogoprotos.Networking.Envelopes.Unknown6.Builder()
        if let jsonValueUnknown1 = jsonMap["unknown1"] as? NSNumber {
          resultDecodedBuilder.unknown1 = jsonValueUnknown1.intValue
        }
        if let jsonValueUnknown2 = jsonMap["unknown2"] as? Dictionary<String,AnyObject> {
          resultDecodedBuilder.unknown2 = try Pogoprotos.Networking.Envelopes.Unknown6.Unknown2.Builder.decodeToBuilder(jsonValueUnknown2).build()

        }
        return resultDecodedBuilder
      }
      override class public func fromJSONToBuilder(data:NSData) throws -> Pogoprotos.Networking.Envelopes.Unknown6.Builder {
        let jsonData = try NSJSONSerialization.JSONObjectWithData(data, options: NSJSONReadingOptions(rawValue: 0))
        guard let jsDataCast = jsonData as? Dictionary<String,AnyObject> else {
          throw ProtocolBuffersError.InvalidProtocolBuffer("Invalid JSON data")
        }
        return try Pogoprotos.Networking.Envelopes.Unknown6.Builder.decodeToBuilder(jsDataCast)
      }
    }

  }

}

// @@protoc_insertion_point(global_scope)
