// Generated by the Protocol Buffers 3.0 compiler.  DO NOT EDIT!
// Source file "DownloadUrlEntry.proto"
// Syntax "Proto3"

import Foundation
import ProtocolBuffers


public struct Pogoprotos { public struct Data { }}

public func == (lhs: Pogoprotos.Data.DownloadUrlEntry, rhs: Pogoprotos.Data.DownloadUrlEntry) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = fieldCheck && (lhs.hasAssetId == rhs.hasAssetId) && (!lhs.hasAssetId || lhs.assetId == rhs.assetId)
  fieldCheck = fieldCheck && (lhs.hasUrl == rhs.hasUrl) && (!lhs.hasUrl || lhs.url == rhs.url)
  fieldCheck = fieldCheck && (lhs.hasSize == rhs.hasSize) && (!lhs.hasSize || lhs.size == rhs.size)
  fieldCheck = fieldCheck && (lhs.hasChecksum == rhs.hasChecksum) && (!lhs.hasChecksum || lhs.checksum == rhs.checksum)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public extension Pogoprotos.Data {
  public struct DownloadUrlEntryRoot {
    public static var sharedInstance : DownloadUrlEntryRoot {
     struct Static {
         static let instance : DownloadUrlEntryRoot = DownloadUrlEntryRoot()
     }
     return Static.instance
    }
    public var extensionRegistry:ExtensionRegistry

    init() {
      extensionRegistry = ExtensionRegistry()
      registerAllExtensions(extensionRegistry)
    }
    public func registerAllExtensions(registry:ExtensionRegistry) {
    }
  }

  final public class DownloadUrlEntry : GeneratedMessage, GeneratedMessageProtocol {
    public private(set) var hasAssetId:Bool = false
    public private(set) var assetId:String = ""

    public private(set) var hasUrl:Bool = false
    public private(set) var url:String = ""

    public private(set) var hasSize:Bool = false
    public private(set) var size:Int32 = Int32(0)

    public private(set) var hasChecksum:Bool = false
    public private(set) var checksum:UInt32 = UInt32(0)

    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) throws {
      if hasAssetId {
        try output.writeString(1, value:assetId)
      }
      if hasUrl {
        try output.writeString(2, value:url)
      }
      if hasSize {
        try output.writeInt32(3, value:size)
      }
      if hasChecksum {
        try output.writeUInt32(4, value:checksum)
      }
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      if hasAssetId {
        serialize_size += assetId.computeStringSize(1)
      }
      if hasUrl {
        serialize_size += url.computeStringSize(2)
      }
      if hasSize {
        serialize_size += size.computeInt32Size(3)
      }
      if hasChecksum {
        serialize_size += checksum.computeUInt32Size(4)
      }
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<Pogoprotos.Data.DownloadUrlEntry> {
      var mergedArray = Array<Pogoprotos.Data.DownloadUrlEntry>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    public class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> Pogoprotos.Data.DownloadUrlEntry? {
      return try Pogoprotos.Data.DownloadUrlEntry.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    public class func parseFromData(data:NSData) throws -> Pogoprotos.Data.DownloadUrlEntry {
      return try Pogoprotos.Data.DownloadUrlEntry.Builder().mergeFromData(data, extensionRegistry:Pogoprotos.Data.DownloadUrlEntryRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> Pogoprotos.Data.DownloadUrlEntry {
      return try Pogoprotos.Data.DownloadUrlEntry.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) throws -> Pogoprotos.Data.DownloadUrlEntry {
      return try Pogoprotos.Data.DownloadUrlEntry.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> Pogoprotos.Data.DownloadUrlEntry {
      return try Pogoprotos.Data.DownloadUrlEntry.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) throws -> Pogoprotos.Data.DownloadUrlEntry {
      return try Pogoprotos.Data.DownloadUrlEntry.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Pogoprotos.Data.DownloadUrlEntry {
      return try Pogoprotos.Data.DownloadUrlEntry.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Pogoprotos.Data.DownloadUrlEntry.Builder {
      return Pogoprotos.Data.DownloadUrlEntry.classBuilder() as! Pogoprotos.Data.DownloadUrlEntry.Builder
    }
    public func getBuilder() -> Pogoprotos.Data.DownloadUrlEntry.Builder {
      return classBuilder() as! Pogoprotos.Data.DownloadUrlEntry.Builder
    }
    override public class func classBuilder() -> MessageBuilder {
      return Pogoprotos.Data.DownloadUrlEntry.Builder()
    }
    override public func classBuilder() -> MessageBuilder {
      return Pogoprotos.Data.DownloadUrlEntry.Builder()
    }
    public func toBuilder() throws -> Pogoprotos.Data.DownloadUrlEntry.Builder {
      return try Pogoprotos.Data.DownloadUrlEntry.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Pogoprotos.Data.DownloadUrlEntry) throws -> Pogoprotos.Data.DownloadUrlEntry.Builder {
      return try Pogoprotos.Data.DownloadUrlEntry.Builder().mergeFrom(prototype)
    }
    override public func encode() throws -> Dictionary<String,AnyObject> {
      guard isInitialized() else {
        throw ProtocolBuffersError.InvalidProtocolBuffer("Uninitialized Message")
      }

      var jsonMap:Dictionary<String,AnyObject> = Dictionary<String,AnyObject>()
      if hasAssetId {
        jsonMap["assetId"] = assetId
      }
      if hasUrl {
        jsonMap["url"] = url
      }
      if hasSize {
        jsonMap["size"] = NSNumber(int:size)
      }
      if hasChecksum {
        jsonMap["checksum"] = NSNumber(unsignedInt:checksum)
      }
      return jsonMap
    }
    override class public func decode(jsonMap:Dictionary<String,AnyObject>) throws -> Pogoprotos.Data.DownloadUrlEntry {
      return try Pogoprotos.Data.DownloadUrlEntry.Builder.decodeToBuilder(jsonMap).build()
    }
    override class public func fromJSON(data:NSData) throws -> Pogoprotos.Data.DownloadUrlEntry {
      return try Pogoprotos.Data.DownloadUrlEntry.Builder.fromJSONToBuilder(data).build()
    }
    override public func getDescription(indent:String) throws -> String {
      var output = ""
      if hasAssetId {
        output += "\(indent) assetId: \(assetId) \n"
      }
      if hasUrl {
        output += "\(indent) url: \(url) \n"
      }
      if hasSize {
        output += "\(indent) size: \(size) \n"
      }
      if hasChecksum {
        output += "\(indent) checksum: \(checksum) \n"
      }
      output += unknownFields.getDescription(indent)
      return output
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            if hasAssetId {
               hashCode = (hashCode &* 31) &+ assetId.hashValue
            }
            if hasUrl {
               hashCode = (hashCode &* 31) &+ url.hashValue
            }
            if hasSize {
               hashCode = (hashCode &* 31) &+ size.hashValue
            }
            if hasChecksum {
               hashCode = (hashCode &* 31) &+ checksum.hashValue
            }
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Pogoprotos.Data.DownloadUrlEntry"
    }
    override public func className() -> String {
        return "Pogoprotos.Data.DownloadUrlEntry"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Pogoprotos.Data.DownloadUrlEntry.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Pogoprotos.Data.DownloadUrlEntry = Pogoprotos.Data.DownloadUrlEntry()
      public func getMessage() -> Pogoprotos.Data.DownloadUrlEntry {
          return builderResult
      }

      required override public init () {
         super.init()
      }
      public var hasAssetId:Bool {
           get {
                return builderResult.hasAssetId
           }
      }
      public var assetId:String {
           get {
                return builderResult.assetId
           }
           set (value) {
               builderResult.hasAssetId = true
               builderResult.assetId = value
           }
      }
      public func setAssetId(value:String) -> Pogoprotos.Data.DownloadUrlEntry.Builder {
        self.assetId = value
        return self
      }
      public func clearAssetId() -> Pogoprotos.Data.DownloadUrlEntry.Builder{
           builderResult.hasAssetId = false
           builderResult.assetId = ""
           return self
      }
      public var hasUrl:Bool {
           get {
                return builderResult.hasUrl
           }
      }
      public var url:String {
           get {
                return builderResult.url
           }
           set (value) {
               builderResult.hasUrl = true
               builderResult.url = value
           }
      }
      public func setUrl(value:String) -> Pogoprotos.Data.DownloadUrlEntry.Builder {
        self.url = value
        return self
      }
      public func clearUrl() -> Pogoprotos.Data.DownloadUrlEntry.Builder{
           builderResult.hasUrl = false
           builderResult.url = ""
           return self
      }
      public var hasSize:Bool {
           get {
                return builderResult.hasSize
           }
      }
      public var size:Int32 {
           get {
                return builderResult.size
           }
           set (value) {
               builderResult.hasSize = true
               builderResult.size = value
           }
      }
      public func setSize(value:Int32) -> Pogoprotos.Data.DownloadUrlEntry.Builder {
        self.size = value
        return self
      }
      public func clearSize() -> Pogoprotos.Data.DownloadUrlEntry.Builder{
           builderResult.hasSize = false
           builderResult.size = Int32(0)
           return self
      }
      public var hasChecksum:Bool {
           get {
                return builderResult.hasChecksum
           }
      }
      public var checksum:UInt32 {
           get {
                return builderResult.checksum
           }
           set (value) {
               builderResult.hasChecksum = true
               builderResult.checksum = value
           }
      }
      public func setChecksum(value:UInt32) -> Pogoprotos.Data.DownloadUrlEntry.Builder {
        self.checksum = value
        return self
      }
      public func clearChecksum() -> Pogoprotos.Data.DownloadUrlEntry.Builder{
           builderResult.hasChecksum = false
           builderResult.checksum = UInt32(0)
           return self
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      override public func clear() -> Pogoprotos.Data.DownloadUrlEntry.Builder {
        builderResult = Pogoprotos.Data.DownloadUrlEntry()
        return self
      }
      override public func clone() throws -> Pogoprotos.Data.DownloadUrlEntry.Builder {
        return try Pogoprotos.Data.DownloadUrlEntry.builderWithPrototype(builderResult)
      }
      override public func build() throws -> Pogoprotos.Data.DownloadUrlEntry {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Pogoprotos.Data.DownloadUrlEntry {
        let returnMe:Pogoprotos.Data.DownloadUrlEntry = builderResult
        return returnMe
      }
      public func mergeFrom(other:Pogoprotos.Data.DownloadUrlEntry) throws -> Pogoprotos.Data.DownloadUrlEntry.Builder {
        if other == Pogoprotos.Data.DownloadUrlEntry() {
         return self
        }
        if other.hasAssetId {
             assetId = other.assetId
        }
        if other.hasUrl {
             url = other.url
        }
        if other.hasSize {
             size = other.size
        }
        if other.hasChecksum {
             checksum = other.checksum
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      override public func mergeFromCodedInputStream(input:CodedInputStream) throws -> Pogoprotos.Data.DownloadUrlEntry.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      override public func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Pogoprotos.Data.DownloadUrlEntry.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let protobufTag = try input.readTag()
          switch protobufTag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          case 10:
            assetId = try input.readString()

          case 18:
            url = try input.readString()

          case 24:
            size = try input.readInt32()

          case 32:
            checksum = try input.readUInt32()

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:protobufTag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
      override class public func decodeToBuilder(jsonMap:Dictionary<String,AnyObject>) throws -> Pogoprotos.Data.DownloadUrlEntry.Builder {
        let resultDecodedBuilder = Pogoprotos.Data.DownloadUrlEntry.Builder()
        if let jsonValueAssetId = jsonMap["assetId"] as? String {
          resultDecodedBuilder.assetId = jsonValueAssetId
        }
        if let jsonValueUrl = jsonMap["url"] as? String {
          resultDecodedBuilder.url = jsonValueUrl
        }
        if let jsonValueSize = jsonMap["size"] as? NSNumber {
          resultDecodedBuilder.size = jsonValueSize.intValue
        }
        if let jsonValueChecksum = jsonMap["checksum"] as? NSNumber {
          resultDecodedBuilder.checksum = jsonValueChecksum.unsignedIntValue
        }
        return resultDecodedBuilder
      }
      override class public func fromJSONToBuilder(data:NSData) throws -> Pogoprotos.Data.DownloadUrlEntry.Builder {
        let jsonData = try NSJSONSerialization.JSONObjectWithData(data, options: NSJSONReadingOptions(rawValue: 0))
        guard let jsDataCast = jsonData as? Dictionary<String,AnyObject> else {
          throw ProtocolBuffersError.InvalidProtocolBuffer("Invalid JSON data")
        }
        return try Pogoprotos.Data.DownloadUrlEntry.Builder.decodeToBuilder(jsDataCast)
      }
    }

  }

}

// @@protoc_insertion_point(global_scope)
