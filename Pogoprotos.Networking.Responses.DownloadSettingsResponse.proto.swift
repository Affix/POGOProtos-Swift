// Generated by the Protocol Buffers 3.0 compiler.  DO NOT EDIT!
// Source file "DownloadSettingsResponse.proto"
// Syntax "Proto3"

import Foundation
import ProtocolBuffers


public struct Pogoprotos { public struct Networking { public struct Responses { }}}

public func == (lhs: Pogoprotos.Networking.Responses.DownloadSettingsResponse, rhs: Pogoprotos.Networking.Responses.DownloadSettingsResponse) -> Bool {
  if (lhs === rhs) {
    return true
  }
  var fieldCheck:Bool = (lhs.hashValue == rhs.hashValue)
  fieldCheck = fieldCheck && (lhs.hasError == rhs.hasError) && (!lhs.hasError || lhs.error == rhs.error)
  fieldCheck = fieldCheck && (lhs.hasHash == rhs.hasHash) && (!lhs.hasHash || lhs.hash == rhs.hash)
  fieldCheck = fieldCheck && (lhs.hasSettings == rhs.hasSettings) && (!lhs.hasSettings || lhs.settings == rhs.settings)
  fieldCheck = (fieldCheck && (lhs.unknownFields == rhs.unknownFields))
  return fieldCheck
}

public extension Pogoprotos.Networking.Responses {
  public struct DownloadSettingsResponseRoot {
    public static var sharedInstance : DownloadSettingsResponseRoot {
     struct Static {
         static let instance : DownloadSettingsResponseRoot = DownloadSettingsResponseRoot()
     }
     return Static.instance
    }
    public var extensionRegistry:ExtensionRegistry

    init() {
      extensionRegistry = ExtensionRegistry()
      registerAllExtensions(extensionRegistry)
      Pogoprotos.Settings.GlobalSettingsRoot.sharedInstance.registerAllExtensions(extensionRegistry)
    }
    public func registerAllExtensions(registry:ExtensionRegistry) {
    }
  }

  final public class DownloadSettingsResponse : GeneratedMessage, GeneratedMessageProtocol {
    public private(set) var hasError:Bool = false
    public private(set) var error:String = ""

    public private(set) var hasHash:Bool = false
    public private(set) var hash:String = ""

    public private(set) var hasSettings:Bool = false
    public private(set) var settings:Pogoprotos.Settings.GlobalSettings!
    required public init() {
         super.init()
    }
    override public func isInitialized() -> Bool {
     return true
    }
    override public func writeToCodedOutputStream(output:CodedOutputStream) throws {
      if hasError {
        try output.writeString(1, value:error)
      }
      if hasHash {
        try output.writeString(2, value:hash)
      }
      if hasSettings {
        try output.writeMessage(3, value:settings)
      }
      try unknownFields.writeToCodedOutputStream(output)
    }
    override public func serializedSize() -> Int32 {
      var serialize_size:Int32 = memoizedSerializedSize
      if serialize_size != -1 {
       return serialize_size
      }

      serialize_size = 0
      if hasError {
        serialize_size += error.computeStringSize(1)
      }
      if hasHash {
        serialize_size += hash.computeStringSize(2)
      }
      if hasSettings {
          if let varSizesettings = settings?.computeMessageSize(3) {
              serialize_size += varSizesettings
          }
      }
      serialize_size += unknownFields.serializedSize()
      memoizedSerializedSize = serialize_size
      return serialize_size
    }
    public class func parseArrayDelimitedFromInputStream(input:NSInputStream) throws -> Array<Pogoprotos.Networking.Responses.DownloadSettingsResponse> {
      var mergedArray = Array<Pogoprotos.Networking.Responses.DownloadSettingsResponse>()
      while let value = try parseFromDelimitedFromInputStream(input) {
        mergedArray += [value]
      }
      return mergedArray
    }
    public class func parseFromDelimitedFromInputStream(input:NSInputStream) throws -> Pogoprotos.Networking.Responses.DownloadSettingsResponse? {
      return try Pogoprotos.Networking.Responses.DownloadSettingsResponse.Builder().mergeDelimitedFromInputStream(input)?.build()
    }
    public class func parseFromData(data:NSData) throws -> Pogoprotos.Networking.Responses.DownloadSettingsResponse {
      return try Pogoprotos.Networking.Responses.DownloadSettingsResponse.Builder().mergeFromData(data, extensionRegistry:Pogoprotos.Networking.Responses.DownloadSettingsResponseRoot.sharedInstance.extensionRegistry).build()
    }
    public class func parseFromData(data:NSData, extensionRegistry:ExtensionRegistry) throws -> Pogoprotos.Networking.Responses.DownloadSettingsResponse {
      return try Pogoprotos.Networking.Responses.DownloadSettingsResponse.Builder().mergeFromData(data, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromInputStream(input:NSInputStream) throws -> Pogoprotos.Networking.Responses.DownloadSettingsResponse {
      return try Pogoprotos.Networking.Responses.DownloadSettingsResponse.Builder().mergeFromInputStream(input).build()
    }
    public class func parseFromInputStream(input:NSInputStream, extensionRegistry:ExtensionRegistry) throws -> Pogoprotos.Networking.Responses.DownloadSettingsResponse {
      return try Pogoprotos.Networking.Responses.DownloadSettingsResponse.Builder().mergeFromInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream) throws -> Pogoprotos.Networking.Responses.DownloadSettingsResponse {
      return try Pogoprotos.Networking.Responses.DownloadSettingsResponse.Builder().mergeFromCodedInputStream(input).build()
    }
    public class func parseFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Pogoprotos.Networking.Responses.DownloadSettingsResponse {
      return try Pogoprotos.Networking.Responses.DownloadSettingsResponse.Builder().mergeFromCodedInputStream(input, extensionRegistry:extensionRegistry).build()
    }
    public class func getBuilder() -> Pogoprotos.Networking.Responses.DownloadSettingsResponse.Builder {
      return Pogoprotos.Networking.Responses.DownloadSettingsResponse.classBuilder() as! Pogoprotos.Networking.Responses.DownloadSettingsResponse.Builder
    }
    public func getBuilder() -> Pogoprotos.Networking.Responses.DownloadSettingsResponse.Builder {
      return classBuilder() as! Pogoprotos.Networking.Responses.DownloadSettingsResponse.Builder
    }
    override public class func classBuilder() -> MessageBuilder {
      return Pogoprotos.Networking.Responses.DownloadSettingsResponse.Builder()
    }
    override public func classBuilder() -> MessageBuilder {
      return Pogoprotos.Networking.Responses.DownloadSettingsResponse.Builder()
    }
    public func toBuilder() throws -> Pogoprotos.Networking.Responses.DownloadSettingsResponse.Builder {
      return try Pogoprotos.Networking.Responses.DownloadSettingsResponse.builderWithPrototype(self)
    }
    public class func builderWithPrototype(prototype:Pogoprotos.Networking.Responses.DownloadSettingsResponse) throws -> Pogoprotos.Networking.Responses.DownloadSettingsResponse.Builder {
      return try Pogoprotos.Networking.Responses.DownloadSettingsResponse.Builder().mergeFrom(prototype)
    }
    override public func encode() throws -> Dictionary<String,AnyObject> {
      guard isInitialized() else {
        throw ProtocolBuffersError.InvalidProtocolBuffer("Uninitialized Message")
      }

      var jsonMap:Dictionary<String,AnyObject> = Dictionary<String,AnyObject>()
      if hasError {
        jsonMap["error"] = error
      }
      if hasHash {
        jsonMap["hash"] = hash
      }
      if hasSettings {
        jsonMap["settings"] = try settings.encode()
      }
      return jsonMap
    }
    override class public func decode(jsonMap:Dictionary<String,AnyObject>) throws -> Pogoprotos.Networking.Responses.DownloadSettingsResponse {
      return try Pogoprotos.Networking.Responses.DownloadSettingsResponse.Builder.decodeToBuilder(jsonMap).build()
    }
    override class public func fromJSON(data:NSData) throws -> Pogoprotos.Networking.Responses.DownloadSettingsResponse {
      return try Pogoprotos.Networking.Responses.DownloadSettingsResponse.Builder.fromJSONToBuilder(data).build()
    }
    override public func getDescription(indent:String) throws -> String {
      var output = ""
      if hasError {
        output += "\(indent) error: \(error) \n"
      }
      if hasHash {
        output += "\(indent) hash: \(hash) \n"
      }
      if hasSettings {
        output += "\(indent) settings {\n"
        if let outDescSettings = settings {
          output += try outDescSettings.getDescription("\(indent)  ")
        }
        output += "\(indent) }\n"
      }
      output += unknownFields.getDescription(indent)
      return output
    }
    override public var hashValue:Int {
        get {
            var hashCode:Int = 7
            if hasError {
               hashCode = (hashCode &* 31) &+ error.hashValue
            }
            if hasHash {
               hashCode = (hashCode &* 31) &+ hash.hashValue
            }
            if hasSettings {
                if let hashValuesettings = settings?.hashValue {
                    hashCode = (hashCode &* 31) &+ hashValuesettings
                }
            }
            hashCode = (hashCode &* 31) &+  unknownFields.hashValue
            return hashCode
        }
    }


    //Meta information declaration start

    override public class func className() -> String {
        return "Pogoprotos.Networking.Responses.DownloadSettingsResponse"
    }
    override public func className() -> String {
        return "Pogoprotos.Networking.Responses.DownloadSettingsResponse"
    }
    override public func classMetaType() -> GeneratedMessage.Type {
        return Pogoprotos.Networking.Responses.DownloadSettingsResponse.self
    }
    //Meta information declaration end

    final public class Builder : GeneratedMessageBuilder {
      private var builderResult:Pogoprotos.Networking.Responses.DownloadSettingsResponse = Pogoprotos.Networking.Responses.DownloadSettingsResponse()
      public func getMessage() -> Pogoprotos.Networking.Responses.DownloadSettingsResponse {
          return builderResult
      }

      required override public init () {
         super.init()
      }
      public var hasError:Bool {
           get {
                return builderResult.hasError
           }
      }
      public var error:String {
           get {
                return builderResult.error
           }
           set (value) {
               builderResult.hasError = true
               builderResult.error = value
           }
      }
      public func setError(value:String) -> Pogoprotos.Networking.Responses.DownloadSettingsResponse.Builder {
        self.error = value
        return self
      }
      public func clearError() -> Pogoprotos.Networking.Responses.DownloadSettingsResponse.Builder{
           builderResult.hasError = false
           builderResult.error = ""
           return self
      }
      public var hasHash:Bool {
           get {
                return builderResult.hasHash
           }
      }
      public var hash:String {
           get {
                return builderResult.hash
           }
           set (value) {
               builderResult.hasHash = true
               builderResult.hash = value
           }
      }
      public func setHash(value:String) -> Pogoprotos.Networking.Responses.DownloadSettingsResponse.Builder {
        self.hash = value
        return self
      }
      public func clearHash() -> Pogoprotos.Networking.Responses.DownloadSettingsResponse.Builder{
           builderResult.hasHash = false
           builderResult.hash = ""
           return self
      }
      public var hasSettings:Bool {
           get {
               return builderResult.hasSettings
           }
      }
      public var settings:Pogoprotos.Settings.GlobalSettings! {
           get {
               if settingsBuilder_ != nil {
                  builderResult.settings = settingsBuilder_.getMessage()
               }
               return builderResult.settings
           }
           set (value) {
               builderResult.hasSettings = true
               builderResult.settings = value
           }
      }
      private var settingsBuilder_:Pogoprotos.Settings.GlobalSettings.Builder! {
           didSet {
              builderResult.hasSettings = true
           }
      }
      public func getSettingsBuilder() -> Pogoprotos.Settings.GlobalSettings.Builder {
        if settingsBuilder_ == nil {
           settingsBuilder_ = Pogoprotos.Settings.GlobalSettings.Builder()
           builderResult.settings = settingsBuilder_.getMessage()
           if settings != nil {
              try! settingsBuilder_.mergeFrom(settings)
           }
        }
        return settingsBuilder_
      }
      public func setSettings(value:Pogoprotos.Settings.GlobalSettings!) -> Pogoprotos.Networking.Responses.DownloadSettingsResponse.Builder {
        self.settings = value
        return self
      }
      public func mergeSettings(value:Pogoprotos.Settings.GlobalSettings) throws -> Pogoprotos.Networking.Responses.DownloadSettingsResponse.Builder {
        if builderResult.hasSettings {
          builderResult.settings = try Pogoprotos.Settings.GlobalSettings.builderWithPrototype(builderResult.settings).mergeFrom(value).buildPartial()
        } else {
          builderResult.settings = value
        }
        builderResult.hasSettings = true
        return self
      }
      public func clearSettings() -> Pogoprotos.Networking.Responses.DownloadSettingsResponse.Builder {
        settingsBuilder_ = nil
        builderResult.hasSettings = false
        builderResult.settings = nil
        return self
      }
      override public var internalGetResult:GeneratedMessage {
           get {
              return builderResult
           }
      }
      override public func clear() -> Pogoprotos.Networking.Responses.DownloadSettingsResponse.Builder {
        builderResult = Pogoprotos.Networking.Responses.DownloadSettingsResponse()
        return self
      }
      override public func clone() throws -> Pogoprotos.Networking.Responses.DownloadSettingsResponse.Builder {
        return try Pogoprotos.Networking.Responses.DownloadSettingsResponse.builderWithPrototype(builderResult)
      }
      override public func build() throws -> Pogoprotos.Networking.Responses.DownloadSettingsResponse {
           try checkInitialized()
           return buildPartial()
      }
      public func buildPartial() -> Pogoprotos.Networking.Responses.DownloadSettingsResponse {
        let returnMe:Pogoprotos.Networking.Responses.DownloadSettingsResponse = builderResult
        return returnMe
      }
      public func mergeFrom(other:Pogoprotos.Networking.Responses.DownloadSettingsResponse) throws -> Pogoprotos.Networking.Responses.DownloadSettingsResponse.Builder {
        if other == Pogoprotos.Networking.Responses.DownloadSettingsResponse() {
         return self
        }
        if other.hasError {
             error = other.error
        }
        if other.hasHash {
             hash = other.hash
        }
        if (other.hasSettings) {
            try mergeSettings(other.settings)
        }
        try mergeUnknownFields(other.unknownFields)
        return self
      }
      override public func mergeFromCodedInputStream(input:CodedInputStream) throws -> Pogoprotos.Networking.Responses.DownloadSettingsResponse.Builder {
           return try mergeFromCodedInputStream(input, extensionRegistry:ExtensionRegistry())
      }
      override public func mergeFromCodedInputStream(input:CodedInputStream, extensionRegistry:ExtensionRegistry) throws -> Pogoprotos.Networking.Responses.DownloadSettingsResponse.Builder {
        let unknownFieldsBuilder:UnknownFieldSet.Builder = try UnknownFieldSet.builderWithUnknownFields(self.unknownFields)
        while (true) {
          let protobufTag = try input.readTag()
          switch protobufTag {
          case 0: 
            self.unknownFields = try unknownFieldsBuilder.build()
            return self

          case 10:
            error = try input.readString()

          case 18:
            hash = try input.readString()

          case 26:
            let subBuilder:Pogoprotos.Settings.GlobalSettings.Builder = Pogoprotos.Settings.GlobalSettings.Builder()
            if hasSettings {
              try subBuilder.mergeFrom(settings)
            }
            try input.readMessage(subBuilder, extensionRegistry:extensionRegistry)
            settings = subBuilder.buildPartial()

          default:
            if (!(try parseUnknownField(input,unknownFields:unknownFieldsBuilder, extensionRegistry:extensionRegistry, tag:protobufTag))) {
               unknownFields = try unknownFieldsBuilder.build()
               return self
            }
          }
        }
      }
      override class public func decodeToBuilder(jsonMap:Dictionary<String,AnyObject>) throws -> Pogoprotos.Networking.Responses.DownloadSettingsResponse.Builder {
        let resultDecodedBuilder = Pogoprotos.Networking.Responses.DownloadSettingsResponse.Builder()
        if let jsonValueError = jsonMap["error"] as? String {
          resultDecodedBuilder.error = jsonValueError
        }
        if let jsonValueHash = jsonMap["hash"] as? String {
          resultDecodedBuilder.hash = jsonValueHash
        }
        if let jsonValueSettings = jsonMap["settings"] as? Dictionary<String,AnyObject> {
          resultDecodedBuilder.settings = try Pogoprotos.Settings.GlobalSettings.Builder.decodeToBuilder(jsonValueSettings).build()

        }
        return resultDecodedBuilder
      }
      override class public func fromJSONToBuilder(data:NSData) throws -> Pogoprotos.Networking.Responses.DownloadSettingsResponse.Builder {
        let jsonData = try NSJSONSerialization.JSONObjectWithData(data, options: NSJSONReadingOptions(rawValue: 0))
        guard let jsDataCast = jsonData as? Dictionary<String,AnyObject> else {
          throw ProtocolBuffersError.InvalidProtocolBuffer("Invalid JSON data")
        }
        return try Pogoprotos.Networking.Responses.DownloadSettingsResponse.Builder.decodeToBuilder(jsDataCast)
      }
    }

  }

}

// @@protoc_insertion_point(global_scope)
