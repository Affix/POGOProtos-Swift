// Generated by the Protocol Buffers 3.0 compiler.  DO NOT EDIT!
// Source file "BattleActionType.proto"
// Syntax "Proto3"

import Foundation
import ProtocolBuffers


public struct Pogoprotos { public struct Data { public struct Battle { }}}

public extension Pogoprotos.Data.Battle {
  public struct BattleActionTypeRoot {
    public static var sharedInstance : BattleActionTypeRoot {
     struct Static {
         static let instance : BattleActionTypeRoot = BattleActionTypeRoot()
     }
     return Static.instance
    }
    public var extensionRegistry:ExtensionRegistry

    init() {
      extensionRegistry = ExtensionRegistry()
      registerAllExtensions(extensionRegistry)
    }
    public func registerAllExtensions(registry:ExtensionRegistry) {
    }
  }



  //Enum type declaration start 

  public enum BattleActionType:Int32, CustomDebugStringConvertible, CustomStringConvertible {
    case ActionUnset = 0
    case ActionAttack = 1
    case ActionDodge = 2
    case ActionSpecialAttack = 3
    case ActionSwapPokemon = 4
    case ActionFaint = 5
    case ActionPlayerJoin = 6
    case ActionPlayerQuit = 7
    case ActionVictory = 8
    case ActionDefeat = 9
    case ActionTimedOut = 10
    public func toString() -> String {
      switch self {
      case .ActionUnset: return "ACTION_UNSET"
      case .ActionAttack: return "ACTION_ATTACK"
      case .ActionDodge: return "ACTION_DODGE"
      case .ActionSpecialAttack: return "ACTION_SPECIAL_ATTACK"
      case .ActionSwapPokemon: return "ACTION_SWAP_POKEMON"
      case .ActionFaint: return "ACTION_FAINT"
      case .ActionPlayerJoin: return "ACTION_PLAYER_JOIN"
      case .ActionPlayerQuit: return "ACTION_PLAYER_QUIT"
      case .ActionVictory: return "ACTION_VICTORY"
      case .ActionDefeat: return "ACTION_DEFEAT"
      case .ActionTimedOut: return "ACTION_TIMED_OUT"
      }
    }
    public static func fromString(str:String) throws -> Pogoprotos.Data.Battle.BattleActionType {
      switch str {
      case "ACTION_UNSET":  return .ActionUnset
      case "ACTION_ATTACK":  return .ActionAttack
      case "ACTION_DODGE":  return .ActionDodge
      case "ACTION_SPECIAL_ATTACK":  return .ActionSpecialAttack
      case "ACTION_SWAP_POKEMON":  return .ActionSwapPokemon
      case "ACTION_FAINT":  return .ActionFaint
      case "ACTION_PLAYER_JOIN":  return .ActionPlayerJoin
      case "ACTION_PLAYER_QUIT":  return .ActionPlayerQuit
      case "ACTION_VICTORY":  return .ActionVictory
      case "ACTION_DEFEAT":  return .ActionDefeat
      case "ACTION_TIMED_OUT":  return .ActionTimedOut
      default: throw ProtocolBuffersError.InvalidProtocolBuffer("Conversion String to Enum has failed.")
      }
    }
    public var debugDescription:String { return getDescription() }
    public var description:String { return getDescription() }
    private func getDescription() -> String { 
        switch self {
            case .ActionUnset: return ".ActionUnset"
            case .ActionAttack: return ".ActionAttack"
            case .ActionDodge: return ".ActionDodge"
            case .ActionSpecialAttack: return ".ActionSpecialAttack"
            case .ActionSwapPokemon: return ".ActionSwapPokemon"
            case .ActionFaint: return ".ActionFaint"
            case .ActionPlayerJoin: return ".ActionPlayerJoin"
            case .ActionPlayerQuit: return ".ActionPlayerQuit"
            case .ActionVictory: return ".ActionVictory"
            case .ActionDefeat: return ".ActionDefeat"
            case .ActionTimedOut: return ".ActionTimedOut"
        }
    }
  }

  //Enum type declaration end 

}

// @@protoc_insertion_point(global_scope)
