// Generated by the Protocol Buffers 3.0 compiler.  DO NOT EDIT!
// Source file "TeamColor.proto"
// Syntax "Proto3"

import Foundation
import ProtocolBuffers


public struct Pogoprotos { public struct Enums { }}

public extension Pogoprotos.Enums {
  public struct TeamColorRoot {
    public static var sharedInstance : TeamColorRoot {
     struct Static {
         static let instance : TeamColorRoot = TeamColorRoot()
     }
     return Static.instance
    }
    public var extensionRegistry:ExtensionRegistry

    init() {
      extensionRegistry = ExtensionRegistry()
      registerAllExtensions(extensionRegistry)
    }
    public func registerAllExtensions(registry:ExtensionRegistry) {
    }
  }



  //Enum type declaration start 

  public enum TeamColor:Int32, CustomDebugStringConvertible, CustomStringConvertible {
    case Neutral = 0
    case Blue = 1
    case Red = 2
    case Yellow = 3
    public func toString() -> String {
      switch self {
      case .Neutral: return "NEUTRAL"
      case .Blue: return "BLUE"
      case .Red: return "RED"
      case .Yellow: return "YELLOW"
      }
    }
    public static func fromString(str:String) throws -> Pogoprotos.Enums.TeamColor {
      switch str {
      case "NEUTRAL":  return .Neutral
      case "BLUE":  return .Blue
      case "RED":  return .Red
      case "YELLOW":  return .Yellow
      default: throw ProtocolBuffersError.InvalidProtocolBuffer("Conversion String to Enum has failed.")
      }
    }
    public var debugDescription:String { return getDescription() }
    public var description:String { return getDescription() }
    private func getDescription() -> String { 
        switch self {
            case .Neutral: return ".Neutral"
            case .Blue: return ".Blue"
            case .Red: return ".Red"
            case .Yellow: return ".Yellow"
        }
    }
  }

  //Enum type declaration end 

}

// @@protoc_insertion_point(global_scope)
