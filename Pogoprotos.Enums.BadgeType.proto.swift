// Generated by the Protocol Buffers 3.0 compiler.  DO NOT EDIT!
// Source file "BadgeType.proto"
// Syntax "Proto3"

import Foundation
import ProtocolBuffers


public struct Pogoprotos { public struct Enums { }}

public extension Pogoprotos.Enums {
  public struct BadgeTypeRoot {
    public static var sharedInstance : BadgeTypeRoot {
     struct Static {
         static let instance : BadgeTypeRoot = BadgeTypeRoot()
     }
     return Static.instance
    }
    public var extensionRegistry:ExtensionRegistry

    init() {
      extensionRegistry = ExtensionRegistry()
      registerAllExtensions(extensionRegistry)
    }
    public func registerAllExtensions(registry:ExtensionRegistry) {
    }
  }



  //Enum type declaration start 

  public enum BadgeType:Int32, CustomDebugStringConvertible, CustomStringConvertible {
    case BadgeUnset = 0
    case BadgeTravelKm = 1
    case BadgePokedexEntries = 2
    case BadgeCaptureTotal = 3
    case BadgeDefeatedFort = 4
    case BadgeEvolvedTotal = 5
    case BadgeHatchedTotal = 6
    case BadgeEncounteredTotal = 7
    case BadgePokestopsVisited = 8
    case BadgeUniquePokestops = 9
    case BadgePokeballThrown = 10
    case BadgeBigMagikarp = 11
    case BadgeDeployedTotal = 12
    case BadgeBattleAttackWon = 13
    case BadgeBattleTrainingWon = 14
    case BadgeBattleDefendWon = 15
    case BadgePrestigeRaised = 16
    case BadgePrestigeDropped = 17
    case BadgeTypeNormal = 18
    case BadgeTypeFighting = 19
    case BadgeTypeFlying = 20
    case BadgeTypePoison = 21
    case BadgeTypeGround = 22
    case BadgeTypeRock = 23
    case BadgeTypeBug = 24
    case BadgeTypeGhost = 25
    case BadgeTypeSteel = 26
    case BadgeTypeFire = 27
    case BadgeTypeWater = 28
    case BadgeTypeGrass = 29
    case BadgeTypeElectric = 30
    case BadgeTypePsychic = 31
    case BadgeTypeIce = 32
    case BadgeTypeDragon = 33
    case BadgeTypeDark = 34
    case BadgeTypeFairy = 35
    case BadgeSmallRattata = 36
    case BadgePikachu = 37
    public func toString() -> String {
      switch self {
      case .BadgeUnset: return "BADGE_UNSET"
      case .BadgeTravelKm: return "BADGE_TRAVEL_KM"
      case .BadgePokedexEntries: return "BADGE_POKEDEX_ENTRIES"
      case .BadgeCaptureTotal: return "BADGE_CAPTURE_TOTAL"
      case .BadgeDefeatedFort: return "BADGE_DEFEATED_FORT"
      case .BadgeEvolvedTotal: return "BADGE_EVOLVED_TOTAL"
      case .BadgeHatchedTotal: return "BADGE_HATCHED_TOTAL"
      case .BadgeEncounteredTotal: return "BADGE_ENCOUNTERED_TOTAL"
      case .BadgePokestopsVisited: return "BADGE_POKESTOPS_VISITED"
      case .BadgeUniquePokestops: return "BADGE_UNIQUE_POKESTOPS"
      case .BadgePokeballThrown: return "BADGE_POKEBALL_THROWN"
      case .BadgeBigMagikarp: return "BADGE_BIG_MAGIKARP"
      case .BadgeDeployedTotal: return "BADGE_DEPLOYED_TOTAL"
      case .BadgeBattleAttackWon: return "BADGE_BATTLE_ATTACK_WON"
      case .BadgeBattleTrainingWon: return "BADGE_BATTLE_TRAINING_WON"
      case .BadgeBattleDefendWon: return "BADGE_BATTLE_DEFEND_WON"
      case .BadgePrestigeRaised: return "BADGE_PRESTIGE_RAISED"
      case .BadgePrestigeDropped: return "BADGE_PRESTIGE_DROPPED"
      case .BadgeTypeNormal: return "BADGE_TYPE_NORMAL"
      case .BadgeTypeFighting: return "BADGE_TYPE_FIGHTING"
      case .BadgeTypeFlying: return "BADGE_TYPE_FLYING"
      case .BadgeTypePoison: return "BADGE_TYPE_POISON"
      case .BadgeTypeGround: return "BADGE_TYPE_GROUND"
      case .BadgeTypeRock: return "BADGE_TYPE_ROCK"
      case .BadgeTypeBug: return "BADGE_TYPE_BUG"
      case .BadgeTypeGhost: return "BADGE_TYPE_GHOST"
      case .BadgeTypeSteel: return "BADGE_TYPE_STEEL"
      case .BadgeTypeFire: return "BADGE_TYPE_FIRE"
      case .BadgeTypeWater: return "BADGE_TYPE_WATER"
      case .BadgeTypeGrass: return "BADGE_TYPE_GRASS"
      case .BadgeTypeElectric: return "BADGE_TYPE_ELECTRIC"
      case .BadgeTypePsychic: return "BADGE_TYPE_PSYCHIC"
      case .BadgeTypeIce: return "BADGE_TYPE_ICE"
      case .BadgeTypeDragon: return "BADGE_TYPE_DRAGON"
      case .BadgeTypeDark: return "BADGE_TYPE_DARK"
      case .BadgeTypeFairy: return "BADGE_TYPE_FAIRY"
      case .BadgeSmallRattata: return "BADGE_SMALL_RATTATA"
      case .BadgePikachu: return "BADGE_PIKACHU"
      }
    }
    public static func fromString(str:String) throws -> Pogoprotos.Enums.BadgeType {
      switch str {
      case "BADGE_UNSET":  return .BadgeUnset
      case "BADGE_TRAVEL_KM":  return .BadgeTravelKm
      case "BADGE_POKEDEX_ENTRIES":  return .BadgePokedexEntries
      case "BADGE_CAPTURE_TOTAL":  return .BadgeCaptureTotal
      case "BADGE_DEFEATED_FORT":  return .BadgeDefeatedFort
      case "BADGE_EVOLVED_TOTAL":  return .BadgeEvolvedTotal
      case "BADGE_HATCHED_TOTAL":  return .BadgeHatchedTotal
      case "BADGE_ENCOUNTERED_TOTAL":  return .BadgeEncounteredTotal
      case "BADGE_POKESTOPS_VISITED":  return .BadgePokestopsVisited
      case "BADGE_UNIQUE_POKESTOPS":  return .BadgeUniquePokestops
      case "BADGE_POKEBALL_THROWN":  return .BadgePokeballThrown
      case "BADGE_BIG_MAGIKARP":  return .BadgeBigMagikarp
      case "BADGE_DEPLOYED_TOTAL":  return .BadgeDeployedTotal
      case "BADGE_BATTLE_ATTACK_WON":  return .BadgeBattleAttackWon
      case "BADGE_BATTLE_TRAINING_WON":  return .BadgeBattleTrainingWon
      case "BADGE_BATTLE_DEFEND_WON":  return .BadgeBattleDefendWon
      case "BADGE_PRESTIGE_RAISED":  return .BadgePrestigeRaised
      case "BADGE_PRESTIGE_DROPPED":  return .BadgePrestigeDropped
      case "BADGE_TYPE_NORMAL":  return .BadgeTypeNormal
      case "BADGE_TYPE_FIGHTING":  return .BadgeTypeFighting
      case "BADGE_TYPE_FLYING":  return .BadgeTypeFlying
      case "BADGE_TYPE_POISON":  return .BadgeTypePoison
      case "BADGE_TYPE_GROUND":  return .BadgeTypeGround
      case "BADGE_TYPE_ROCK":  return .BadgeTypeRock
      case "BADGE_TYPE_BUG":  return .BadgeTypeBug
      case "BADGE_TYPE_GHOST":  return .BadgeTypeGhost
      case "BADGE_TYPE_STEEL":  return .BadgeTypeSteel
      case "BADGE_TYPE_FIRE":  return .BadgeTypeFire
      case "BADGE_TYPE_WATER":  return .BadgeTypeWater
      case "BADGE_TYPE_GRASS":  return .BadgeTypeGrass
      case "BADGE_TYPE_ELECTRIC":  return .BadgeTypeElectric
      case "BADGE_TYPE_PSYCHIC":  return .BadgeTypePsychic
      case "BADGE_TYPE_ICE":  return .BadgeTypeIce
      case "BADGE_TYPE_DRAGON":  return .BadgeTypeDragon
      case "BADGE_TYPE_DARK":  return .BadgeTypeDark
      case "BADGE_TYPE_FAIRY":  return .BadgeTypeFairy
      case "BADGE_SMALL_RATTATA":  return .BadgeSmallRattata
      case "BADGE_PIKACHU":  return .BadgePikachu
      default: throw ProtocolBuffersError.InvalidProtocolBuffer("Conversion String to Enum has failed.")
      }
    }
    public var debugDescription:String { return getDescription() }
    public var description:String { return getDescription() }
    private func getDescription() -> String { 
        switch self {
            case .BadgeUnset: return ".BadgeUnset"
            case .BadgeTravelKm: return ".BadgeTravelKm"
            case .BadgePokedexEntries: return ".BadgePokedexEntries"
            case .BadgeCaptureTotal: return ".BadgeCaptureTotal"
            case .BadgeDefeatedFort: return ".BadgeDefeatedFort"
            case .BadgeEvolvedTotal: return ".BadgeEvolvedTotal"
            case .BadgeHatchedTotal: return ".BadgeHatchedTotal"
            case .BadgeEncounteredTotal: return ".BadgeEncounteredTotal"
            case .BadgePokestopsVisited: return ".BadgePokestopsVisited"
            case .BadgeUniquePokestops: return ".BadgeUniquePokestops"
            case .BadgePokeballThrown: return ".BadgePokeballThrown"
            case .BadgeBigMagikarp: return ".BadgeBigMagikarp"
            case .BadgeDeployedTotal: return ".BadgeDeployedTotal"
            case .BadgeBattleAttackWon: return ".BadgeBattleAttackWon"
            case .BadgeBattleTrainingWon: return ".BadgeBattleTrainingWon"
            case .BadgeBattleDefendWon: return ".BadgeBattleDefendWon"
            case .BadgePrestigeRaised: return ".BadgePrestigeRaised"
            case .BadgePrestigeDropped: return ".BadgePrestigeDropped"
            case .BadgeTypeNormal: return ".BadgeTypeNormal"
            case .BadgeTypeFighting: return ".BadgeTypeFighting"
            case .BadgeTypeFlying: return ".BadgeTypeFlying"
            case .BadgeTypePoison: return ".BadgeTypePoison"
            case .BadgeTypeGround: return ".BadgeTypeGround"
            case .BadgeTypeRock: return ".BadgeTypeRock"
            case .BadgeTypeBug: return ".BadgeTypeBug"
            case .BadgeTypeGhost: return ".BadgeTypeGhost"
            case .BadgeTypeSteel: return ".BadgeTypeSteel"
            case .BadgeTypeFire: return ".BadgeTypeFire"
            case .BadgeTypeWater: return ".BadgeTypeWater"
            case .BadgeTypeGrass: return ".BadgeTypeGrass"
            case .BadgeTypeElectric: return ".BadgeTypeElectric"
            case .BadgeTypePsychic: return ".BadgeTypePsychic"
            case .BadgeTypeIce: return ".BadgeTypeIce"
            case .BadgeTypeDragon: return ".BadgeTypeDragon"
            case .BadgeTypeDark: return ".BadgeTypeDark"
            case .BadgeTypeFairy: return ".BadgeTypeFairy"
            case .BadgeSmallRattata: return ".BadgeSmallRattata"
            case .BadgePikachu: return ".BadgePikachu"
        }
    }
  }

  //Enum type declaration end 

}

// @@protoc_insertion_point(global_scope)
